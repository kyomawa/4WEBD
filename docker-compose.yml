services:
  load-balancer:
      image: nginx:latest
      container_name: load-balancer
      ports:
        - "8080:80" 
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on: 
        - auth-service
        - users-service
  database:
    image: mongo:latest
    container_name: database
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    volumes:
      - ./auth-service:/usr/src/app/auth-service
      - ./common:/usr/src/app/common
      - auth-target-volume:/usr/src/app/auth-service/target
    depends_on:
      - database
    environment:
      JWT_INTERNAL_SIGNATURE: ${JWT_INTERNAL_SIGNATURE}
      JWT_EXTERNAL_SIGNATURE: ${JWT_EXTERNAL_SIGNATURE}
      DATABASE_URL_AUTH_SERVICE: ${DATABASE_URL_AUTH_SERVICE}

  users-service:
    build:
      context: ./users-service
      dockerfile: Dockerfile
    container_name: users-service
    volumes:
      - ./users-service:/usr/src/app/users-service
      - ./common:/usr/src/app/common
      - users-target-volume:/usr/src/app/users-service/target
    depends_on:
      - database
    environment:
      JWT_INTERNAL_SIGNATURE: ${JWT_INTERNAL_SIGNATURE}
      JWT_EXTERNAL_SIGNATURE: ${JWT_EXTERNAL_SIGNATURE}
      DATABASE_URL_USERS_SERVICE: ${DATABASE_URL_USERS_SERVICE}
volumes:
  auth-target-volume:
  users-target-volume: