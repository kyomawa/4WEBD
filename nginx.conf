events {
  worker_connections 1024;
}

http {
  upstream users_backend {
    server users-service:8080;
  }

  upstream auth_backend {
    server auth-service:8080;
  }

  upstream events_backend {
    server events-service:8080;
  }

  upstream tickets_backend {
    server tickets-service:8080;
  }

  upstream notifications_backend {
    server notifications-service:8080;
  }

  upstream payments_backend {
    server payments-service:8080;
  }

  upstream backups_backend {
    server backups-service:8080;
  }

  server {
    listen 80;

    location /health {
      access_log off;
      return 200 'Nginx is alive';
      add_header Content-Type text/plain;
    }

    location /api/users {
      proxy_pass http://users_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/auth {
      proxy_pass http://auth_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/events {
      proxy_pass http://events_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/tickets {
      proxy_pass http://tickets_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/notifications {
      proxy_pass http://notifications_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/payments {
      proxy_pass http://payments_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/backups {
      proxy_pass http://backups_backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
      return 404;
    }
  }
}
